//apply plugin: "java"
apply plugin: "com.github.johnrengelman.shadow"

architectury {
    common(rootProject.enabled_platforms.split(","))
}



loom {
    accessWidenerPath = file("src/main/resources/libgui.accesswidener")
}


dependencies {
    modApi "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
//    modImplementation "net.minecraftforge:forgespi:6.0.0"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury:${rootProject.architectury_version}"

    shadow "org.joml:joml:1.10.5"
    shadow "blue.endless:jankson:1.2.1"
    shadow "io.github.juuxel:libninepatch:${rootProject.libninepatch_version}"
//    shadowCommon "io.github.juuxel:libninepatch:${rootProject.libninepatch_version}"

//    shadow "blue.endless:jankson:1.2.1"
//    include "blue.endless:jankson:1.2.1"
//
//    modApi "io.github.juuxel:libninepatch:${rootProject.libninepatch_version}"
//    include "io.github.juuxel:libninepatch:${rootProject.libninepatch_version}"
//
//    modApi 'org.joml:joml:1.10.5'
//    include 'org.joml:joml:1.10.5'
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}

configurations {
    shadow
}

//processResources {
//    inputs.property "version", project.version
//
//    filesMatching("META-INF/mods.toml") {
//        expand "version": project.version
//    }
//}


// for dev jar
shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadow]
    classifier "dev-shadow+${rootProject.minecraft_version}"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier "shadow+${rootProject.minecraft_version}"
}

jar {
    classifier "dev"
}
//
